{"version":3,"sources":["components/navigation.tsx","fb.ts","components/auth-form.tsx","pages/auth.tsx","components/nweets.tsx","components/nweet-factory.tsx","pages/home.tsx","pages/profile.tsx","routers/router.tsx","App.tsx","index.tsx"],"names":["Navigation","user","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storeService","storage","AuthForm","isCreateAccount","setIsCreateAccount","error","setError","useState","email","setEmail","password","setPassword","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Fragment","className","type","placeholder","required","onClick","current","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweets","nweet","isEditing","setEditing","text","newNweetText","setNewNweetText","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileUrl","toggleEditing","update","uid","creatorId","autoFocus","faPencilAlt","faTrash","src","alt","NweetFactory","setNweet","file","setFile","inputFileRef","useRef","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","nweetObj","createdAt","Date","now","collection","add","maxLength","htmlFor","faPlus","accept","changeFile","files","reader","FileReader","onloadend","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Profile","refreshUser","setDisplayName","updateProfile","signOut","Router","isLoggedIn","basename","maxWidth","width","margin","exact","path","from","App","init","setInit","setUser","reloadUser","onAuthStateChanged","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3a886f.chunk.js","sourcesContent":["import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface INavigationProps {\r\n  user: firebase.default.User | null;\r\n}\r\n\r\nexport const Navigation: React.FC<INavigationProps> = ({ user }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color=\"#04AAFF\" size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {user?.displayName ? `${user.displayName}의 Profile` : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storeService = firebase.storage();\r\n","import { authService } from \"fb\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface IAuthForm {\r\n  isCreateAccount: boolean;\r\n  error: string;\r\n  setIsCreateAccount: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setError: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport const AuthForm: React.FC<IAuthForm> = ({\r\n  isCreateAccount,\r\n  setIsCreateAccount,\r\n  error,\r\n  setError,\r\n}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (isCreateAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleMethod = () => {\r\n    setIsCreateAccount((current) => !current);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={isCreateAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n      </form>\r\n      <span className=\"authError\">{error}</span>\r\n      <span onClick={toggleMethod} className=\"authSwitch\">\r\n        {isCreateAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { AuthForm } from \"components/auth-form\";\r\nimport { authService, firebaseInstance } from \"fb\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const Auth = () => {\r\n  const [isCreateAccount, setIsCreateAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSocialClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      const target = event.target as HTMLButtonElement;\r\n      let provider:\r\n        | firebase.default.auth.GoogleAuthProvider\r\n        | firebase.default.auth.GithubAuthProvider;\r\n      if (target.name === \"google\") {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      } else if (target.name === \"github\") {\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n      await authService.signInWithPopup(provider!);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm\r\n        isCreateAccount={isCreateAccount}\r\n        setIsCreateAccount={setIsCreateAccount}\r\n        error={error}\r\n        setError={setError}\r\n      />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storeService } from \"fb\";\r\nimport firebase from \"firebase\";\r\nimport React, { useState } from \"react\";\r\nimport { INweet } from \"../pages/home\";\r\n\r\ninterface INweetsProps {\r\n  nweet: INweet;\r\n  user: firebase.User | null;\r\n}\r\n\r\nexport const Nweets: React.FC<INweetsProps> = ({ nweet, user }) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newNweetText, setNewNweetText] = useState(nweet.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweet.id}`).delete();\r\n      await storeService.refFromURL(nweet.fileUrl!).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((current) => !current);\r\n  };\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweetText(value);\r\n  };\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    dbService.doc(`/nweets/${nweet.id}`).update({\r\n      text: newNweetText,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {isEditing ? (\r\n        <React.Fragment>\r\n          {user?.uid === nweet.creatorId && (\r\n            <React.Fragment>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newNweetText}\r\n                  placeholder=\"Edit your Nweet\"\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <button className=\"formBtn\">Update</button>\r\n              </form>\r\n              <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <h4>{nweet.text}</h4>\r\n          {user?.uid === nweet.creatorId && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n            </div>\r\n          )}\r\n          {nweet.fileUrl && <img src={nweet.fileUrl} alt={nweet.id} />}\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storeService } from \"fb\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ninterface INweetFactoryProps {\r\n  user: firebase.default.User | null;\r\n}\r\n\r\nexport const NweetFactory: React.FC<INweetFactoryProps> = ({ user }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [file, setFile] = useState<string | null>(null);\r\n  const inputFileRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    let fileUrl = null;\r\n    if (file !== null) {\r\n      const fileRef = storeService.ref().child(`${user?.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, \"data_url\");\r\n      fileUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: user!.uid,\r\n      fileUrl,\r\n    };\r\n\r\n    if (nweetObj.text !== \"\" || nweetObj.fileUrl !== null) {\r\n      await dbService.collection(\"nweets\").add(nweetObj);\r\n      setNweet(\"\");\r\n      setFile(\"\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    let changeFile;\r\n    if (files) {\r\n      changeFile = files[0];\r\n    } else {\r\n      changeFile = null;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setFile(reader.result as string | null);\r\n    };\r\n    if (changeFile) {\r\n      reader.readAsDataURL(changeFile);\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const onClearFile = () => {\r\n    setFile(null);\r\n    if (inputFileRef.current) {\r\n      inputFileRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {file && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={file}\r\n            style={{\r\n              backgroundImage: file,\r\n            }}\r\n            alt=\"file-img\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n","import { dbService } from \"fb\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Nweets } from \"components/nweets\";\r\nimport { NweetFactory } from \"components/nweet-factory\";\r\n\r\ninterface IHomeProps {\r\n  user: firebase.User | null;\r\n}\r\n\r\nexport interface INweet {\r\n  id: string;\r\n  createdAt?: Date;\r\n  creatorId?: string;\r\n  text?: string;\r\n  fileUrl?: string;\r\n}\r\n\r\nexport const Home: React.FC<IHomeProps> = ({ user }) => {\r\n  const [nweets, setNweets] = useState<INweet[]>([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory user={user} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweets key={nweet.id} nweet={nweet} user={user} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { authService } from \"fb\";\r\nimport firebase from \"firebase/app\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface IProfileProps {\r\n  user: firebase.User | null;\r\n  refreshUser: () => void;\r\n}\r\n\r\nexport const Profile: React.FC<IProfileProps> = ({ user, refreshUser }) => {\r\n  const [displayName, setDisplayName] = useState(user?.displayName!);\r\n\r\n  const onLogOutClick = () => authService.signOut();\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (user && user.displayName !== displayName) {\r\n      await user.updateProfile({\r\n        displayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display Name\"\r\n          value={displayName}\r\n          autoFocus\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Navigation } from \"../components/navigation\";\r\nimport { Auth } from \"../pages/auth\";\r\nimport { Home } from \"../pages/home\";\r\nimport { Profile } from \"../pages/profile\";\r\n\r\ninterface IRouterProps {\r\n  isLoggedIn: boolean;\r\n  user: firebase.User | null;\r\n  refreshUser: () => void;\r\n}\r\n\r\nexport const Router: React.FC<IRouterProps> = ({\r\n  isLoggedIn,\r\n  user,\r\n  refreshUser,\r\n}) => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      {isLoggedIn && <Navigation user={user} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home user={user} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile user={user} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Router } from \"./routers/router\";\r\nimport { authService } from \"./fb\";\r\nimport \"./styles.css\";\r\n\r\ninterface IFirebase extends firebase.User {\r\n  reloadUser?: () => void;\r\n}\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [user, setUser] = useState<IFirebase | null>(null);\r\n\r\n  const refreshUser = async () => {\r\n    user?.reloadUser!();\r\n  };\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user: IFirebase | null) => {\r\n      if (user) {\r\n        user.reloadUser = () => {\r\n          setUser(null);\r\n          setUser(() => authService.currentUser);\r\n        };\r\n        setUser(user);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {init ? (\r\n        <Router\r\n          isLoggedIn={Boolean(user)}\r\n          user={user}\r\n          refreshUser={refreshUser}\r\n        />\r\n      ) : (\r\n        \"Initailizing...\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}